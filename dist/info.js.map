{
  "version": 3,
  "sources": ["../src/info.ts"],
  "sourcesContent": ["\n/*\n * Webflow Info Element\n * used to display basic info in an element, with a default state.  \n */ \n\n// TESTING:\n// https://x-dropdown.design.webflow.com/?pageId=65ee695cf730614c28b248ae \n\nconst CC_INFO: string = \"cc-info\"; \n\nexport class WebflowInfoElementCollection {\n\n  constructor() {\n  }\n\n  init() {\n  }\n\n}\n\nexport class WebflowInfoElement {\n\n  // Dropdown element parts\n\n  name: string;\n  infoElem: HTMLElement; // [cc-info]\n  default: string = ''; \n  valid: boolean = false;\n\n\n  // // Determines if the dropdown is open\n  // get isOpen(): boolean {\n  //   return this.dropdownListElem.classList.contains('w--open');\n  // } \n\n\n// This is a typical dropdown element\n// in Webflow \n\n/*\n<div data-hover=\"false\" data-delay=\"0\" class=\"w-dropdown\" style=\"\">\n   <div class=\"w-dropdown-toggle\" id=\"w-dropdown-toggle-0\" aria-controls=\"w-dropdown-list-0\" aria-haspopup=\"menu\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\">\n      <div class=\"w-icon-dropdown-toggle\" aria-hidden=\"true\"></div>\n      <div>Dropdown</div>\n   </div>\n   <nav class=\"w-dropdown-list\" id=\"w-dropdown-list-0\" aria-labelledby=\"w-dropdown-toggle-0\"><a href=\"#\" class=\"w-dropdown-link\" tabindex=\"0\">Link 1</a><a href=\"#\" class=\"w-dropdown-link\" tabindex=\"0\">Link 2</a><a href=\"#\" class=\"w-dropdown-link\" tabindex=\"0\">Link 3</a></nav>\n</div>\n*/ \n\n  constructor(name: string) {\n\n    this.name = name;\n\n  }\n\n  init() {\n    \n    if(!this.name) {\n      throw new Error(\"No name specified.\");\n    }\n\n    const selector: string = `[${CC_INFO}=\"${this.name}\"]`; // Construct a selector for the custom attribute\n    const element: HTMLElement | null = document.querySelector(selector);\n    \n    if (element == null) {\n      console.warn(\"Element with the specified cc-info value not found.\");\n      return;\n    }\n\n    this.infoElem = element; \n    this.default = element.textContent || '';\nwindow.debug.log(\"default is\", this.default)\n    // Element is ready for modification\n    this.valid = true; \n\n  }\n\n  clear(): void {\n\n    this.infoElem.innerText = this.default; \n\n  }\n\n  set(text: string) {\n\nwindow.debug.log(\"setting text\", text); \n\n    this.infoElem.innerText = text;\n\n  }    \n\n}\n"],
  "mappings": ";;AASA,MAAM,UAAkB;AAEjB,MAAM,+BAAN,MAAmC;AAAA,IAExC,cAAc;AAAA,IACd;AAAA,IAEA,OAAO;AAAA,IACP;AAAA,EAEF;AAEO,MAAM,qBAAN,MAAyB;AAAA,IA6B9B,YAAY,MAAc;AAvB1B,qBAAkB;AAClB,mBAAiB;AAwBf,WAAK,OAAO;AAAA,IAEd;AAAA,IAEA,OAAO;AAEL,UAAG,CAAC,KAAK,MAAM;AACb,cAAM,IAAI,MAAM,oBAAoB;AAAA,MACtC;AAEA,YAAM,WAAmB,IAAI,YAAY,KAAK;AAC9C,YAAM,UAA8B,SAAS,cAAc,QAAQ;AAEnE,UAAI,WAAW,MAAM;AACnB,gBAAQ,KAAK,qDAAqD;AAClE;AAAA,MACF;AAEA,WAAK,WAAW;AAChB,WAAK,UAAU,QAAQ,eAAe;AAC1C,aAAO,MAAM,IAAI,cAAc,KAAK,OAAO;AAEvC,WAAK,QAAQ;AAAA,IAEf;AAAA,IAEA,QAAc;AAEZ,WAAK,SAAS,YAAY,KAAK;AAAA,IAEjC;AAAA,IAEA,IAAI,MAAc;AAEpB,aAAO,MAAM,IAAI,gBAAgB,IAAI;AAEjC,WAAK,SAAS,YAAY;AAAA,IAE5B;AAAA,EAEF;",
  "names": []
}
