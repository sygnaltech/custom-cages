{
  "version": 3,
  "sources": ["../src/fs-filter-utils.ts"],
  "sourcesContent": ["\n/*\n * FS Filter Extensions\n * \n */\n\nimport { WebflowDropdown } from \"./dropdown\";\n\n \n\n\nexport class FSFilterUtils {\n\n  // Dropdown element parts\n\n  // Determines if the dropdown is open\n  // get isOpen(): boolean {\n  //   return this.dropdownListElem.classList.contains('w--open');\n  // } \n\n// Make it work on an instance \n\n  constructor(elem: HTMLElement) { \n\n    // // Get the dropdown primary element\n    // if (!elem.classList.contains('w-dropdown')) {\n    //   throw new Error(\"The provided element is not a Webflow dropdown element.\");\n    // }\n    // this.dropdownElem = elem;\n\n    // // Get the toggle\n    // const toggleElem = elem.querySelector('.w-dropdown-toggle');\n\n    // // Get the list\n    // const listElem = elem.querySelector('.w-dropdown-list');\n\n    // if (!toggleElem || !listElem) {\n    //   throw new Error(\"The dropdown element does not have the required child elements.\");\n    // }\n\n    // this.dropdownToggleElem = toggleElem as HTMLElement;\n    // this.dropdownListElem = listElem as HTMLElement;\n\n  }\n\n  init() {\n                  \n  }\n\n  /**\n   * Core\n   */\n\n  refresh() {\n\n  }\n\n  /**\n   * Filter field handlers\n   */\n\n  // Set\n\n  // Clear\n\n  /**\n   * Tag handlers\n   */\n\n  /**\n   * Utilities\n   */\n\n  // Closes a filter tag by click\n  static removeFilterTagByName(tagName: string): void {\n    // Find all elements that contain the tag text\n    const tagElements = document.querySelectorAll<HTMLDivElement>('div[fs-cmsfilter-element=\"tag-text\"]');\n  \n    tagElements.forEach(element => {\n      // Check if the current element's text includes the tagName\n      if (element.textContent && element.textContent.includes(tagName)) {\n        // Find the close icon in the same tag-template parent\n        const closeIcon = element.closest('div[fs-cmsfilter-element=\"tag-template\"]')?.querySelector<HTMLImageElement>('img[fs-cmsfilter-element=\"tag-remove\"]');\n        if (closeIcon) {\n          // Trigger a click event on the close icon\n          closeIcon.click();\n        }\n      }\n    });\n  }\n\n}\n"],
  "mappings": ";;AAWO,MAAM,gBAAN,MAAoB;AAAA,IAWzB,YAAY,MAAmB;AAAA,IAqB/B;AAAA,IAEA,OAAO;AAAA,IAEP;AAAA,IAMA,UAAU;AAAA,IAEV;AAAA,IAmBA,OAAO,sBAAsB,SAAuB;AAElD,YAAM,cAAc,SAAS,iBAAiC,sCAAsC;AAEpG,kBAAY,QAAQ,aAAW;AAE7B,YAAI,QAAQ,eAAe,QAAQ,YAAY,SAAS,OAAO,GAAG;AAEhE,gBAAM,YAAY,QAAQ,QAAQ,0CAA0C,GAAG,cAAgC,wCAAwC;AACvJ,cAAI,WAAW;AAEb,sBAAU,MAAM;AAAA,UAClB;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EAEF;",
  "names": []
}
