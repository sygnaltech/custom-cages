{
  "version": 3,
  "sources": ["../src/debug.ts", "../src/dropdown.ts", "../src/fs-filter-utils.ts", "../src/info.ts", "../src/page/filter.ts", "../src/page/test.ts", "../src/routeDispatcher.ts", "../src/index.ts"],
  "sourcesContent": ["\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Debug Utilities\n */\n\n\n\nexport class Sa5Debug {\n    \n    private localStorageDebugFlag: string = 'sa5-debug';\n\n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Get or set WFU persistent debug state\n    // which is stored in localStorage. \n    get persistentDebug(): boolean {\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n    }\n    set persistentDebug(active: boolean) {\n        if (active) {\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\n            console.debug (\"sa5-core debug enabled (persistent).\");\n        } else {\n            localStorage.removeItem(this.localStorageDebugFlag); \n            console.debug (\"sa5-core debug disabled (persistent).\");\n        }\n    }\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n\n    // Initialize\n    constructor(label: string = \"\") {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log data to the console\n    log(...args: any[]): void {\n\n        if (!this.enabled)\n            return;\n\n        // Unlimited arguments in a JavaScript function\n        // https://stackoverflow.com/a/6396066\n        if(this._label)\n            console.log(this._label, ...args); \n        else\n            console.log(...args); \n            \n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (!this.enabled)\n            return;\n\n        // Unlimited arguments in a JavaScript function\n        // https://stackoverflow.com/a/6396066\n        if(this._label)\n            console.debug(this._label, ...args); \n        else\n            console.debug(...args); \n            \n    }\n\n}\n\n\n", "\n/*\n * Webflow Dropdown Element\n * used to manipulate the element.  \n * \n */ \n\n// TESTING:\n// https://x-dropdown.design.webflow.com/?pageId=65ee695cf730614c28b248ae \n\nexport class WebflowDropdown {\n\n  // Dropdown element parts\n\n  dropdownElem: HTMLElement; // .w-dropdown\n  dropdownToggleElem: HTMLElement; // .w-dropdown-toggle\n  dropdownListElem: HTMLElement; // .w-dropdown-list\n\n  // Determines if the dropdown is open\n  get isOpen(): boolean {\n    return this.dropdownListElem.classList.contains('w--open');\n  } \n\n\n// This is a typical dropdown element\n// in Webflow \n\n/*\n<div data-hover=\"false\" data-delay=\"0\" class=\"w-dropdown\" style=\"\">\n   <div class=\"w-dropdown-toggle\" id=\"w-dropdown-toggle-0\" aria-controls=\"w-dropdown-list-0\" aria-haspopup=\"menu\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\">\n      <div class=\"w-icon-dropdown-toggle\" aria-hidden=\"true\"></div>\n      <div>Dropdown</div>\n   </div>\n   <nav class=\"w-dropdown-list\" id=\"w-dropdown-list-0\" aria-labelledby=\"w-dropdown-toggle-0\"><a href=\"#\" class=\"w-dropdown-link\" tabindex=\"0\">Link 1</a><a href=\"#\" class=\"w-dropdown-link\" tabindex=\"0\">Link 2</a><a href=\"#\" class=\"w-dropdown-link\" tabindex=\"0\">Link 3</a></nav>\n</div>\n*/ \n\n  \n\n  constructor(elem: HTMLElement) { \n\n    // Get the dropdown primary element\n    if (!elem.classList.contains('w-dropdown')) {\n      throw new Error(\"The provided element is not a Webflow dropdown element.\");\n    }\n    this.dropdownElem = elem;\n\n    // Get the toggle\n    const toggleElem = elem.querySelector('.w-dropdown-toggle');\n\n    // Get the list\n    const listElem = elem.querySelector('.w-dropdown-list');\n\n    if (!toggleElem || !listElem) {\n      throw new Error(\"The dropdown element does not have the required child elements.\");\n    }\n\n    this.dropdownToggleElem = toggleElem as HTMLElement;\n    this.dropdownListElem = listElem as HTMLElement;\n\n  }\n\n  init() {\n                  \n  }\n\n  click(): void {\n\n    // To click Webflow's dropdowns,\n    // we must target the toggle element,\n    // and send both a mousedown and mouseup event ( not a click event )\n\n    // Create & dispatch the mousedown event\n    const mouseDownEvent = new MouseEvent('mousedown', {\n      bubbles: true, // Allows the event to bubble up the DOM tree\n      cancelable: true, // Allows the event to be cancelable\n    });\n    this.dropdownToggleElem.dispatchEvent(mouseDownEvent);\n\n    // Create & dispatch the mouseup event\n    const mouseUpEvent = new MouseEvent('mouseup', {\n      bubbles: true, // Allows the event to bubble up the DOM tree\n      cancelable: true, // Allows the event to be cancelable\n    });\n    this.dropdownToggleElem.dispatchEvent(mouseUpEvent);\n\n  }\n\n  open(): void {\n\n    window.debug.log(\"state\", this.isOpen) \n\n\n    if (!this.isOpen) {\n\n// this.dropdownToggleElem.classList.add(\"w--open\");\n// this.dropdownListElem.classList.add(\"w--open\");\n// this.dropdownToggleElem.setAttribute(\"aria-expanded\", \"true\");\n// this.dropdownElem.style.zIndex = '901';\n\n      this.click(); \n//      this.dropdownToggleElem.click();\n    }\n  }\n\n  close(): void {\n    window.debug.log(\"close handler\")\n    window.debug.log(\"state\", this.isOpen) \n    // if (this.isOpen) {\n    //   this.dropdownToggleElem.click();\n    //   window.debug.log(\"clicked close\"); \n    // }\n\n    if (this.isOpen) {\n      // this.dropdownToggleElem.classList.remove(\"w--open\");\n      // this.dropdownListElem.classList.remove(\"w--open\");\n      // this.dropdownToggleElem.setAttribute(\"aria-expanded\", \"false\");\n      // this.dropdownElem.style.zIndex = '';\n      this.click(); \n    }\n    \n\n\n  }\n  \n  toggle(): void {\n\n    this.isOpen ? this.close() : this.open();\n\n  }\n\n  clear(keepFirstItem: boolean = false): void {\n\n      // Select all direct child anchor elements of the parent element\n      const listItems: NodeListOf<HTMLAnchorElement> = this.dropdownListElem.querySelectorAll('a');\n\n      // Iterate over the NodeList, and optionally keep the first item based on keepFirstItem flag\n      listItems.forEach((anchor, index) => {\n        if (keepFirstItem && index === 0) {\n          // Skip the first item\n        } else {\n          // Delete the anchor element\n          anchor.remove();\n        }\n      });\n\n  }\n\n  static initWebflowJS() {\n\n    // Re-initialize \n//    window.debug.log(\"re-initializing dropdowns\"); \n\n    // re-initiate webflow ix2 \n    // https://discourse.webflow.com/t/how-to-change-webflow-animation-properties-with-js/193404/2\n    // (window as any).Webflow && (window as any).Webflow.destroy();\n    // (window as any).Webflow && (window as any).Webflow.ready();\n//    (window as any).Webflow && (window as any).Webflow.require( 'ix2' ).init();\n    (window as any).Webflow.require('dropdown').ready(); \n    document.dispatchEvent( new Event( 'readystatechange' ) );\n\n  }\n\n}\n", "\n/*\n * FS Filter Extensions\n * \n */\n\nimport { WebflowDropdown } from \"./dropdown\";\n\n \n\n\nexport class FSFilterUtils {\n\n  // Dropdown element parts\n\n  // Determines if the dropdown is open\n  // get isOpen(): boolean {\n  //   return this.dropdownListElem.classList.contains('w--open');\n  // } \n\n// Make it work on an instance \n\n  constructor(elem: HTMLElement) { \n\n    // // Get the dropdown primary element\n    // if (!elem.classList.contains('w-dropdown')) {\n    //   throw new Error(\"The provided element is not a Webflow dropdown element.\");\n    // }\n    // this.dropdownElem = elem;\n\n    // // Get the toggle\n    // const toggleElem = elem.querySelector('.w-dropdown-toggle');\n\n    // // Get the list\n    // const listElem = elem.querySelector('.w-dropdown-list');\n\n    // if (!toggleElem || !listElem) {\n    //   throw new Error(\"The dropdown element does not have the required child elements.\");\n    // }\n\n    // this.dropdownToggleElem = toggleElem as HTMLElement;\n    // this.dropdownListElem = listElem as HTMLElement;\n\n  }\n\n  init() {\n                  \n  }\n\n  /**\n   * Core\n   */\n\n  refresh() {\n\n  }\n\n  /**\n   * Filter field handlers\n   */\n\n  // Set\n\n  // Clear\n\n  /**\n   * Tag handlers\n   */\n\n  /**\n   * Utilities\n   */\n\n  // Closes a filter tag by click\n  static removeFilterTagByName(tagName: string): void {\n    // Find all elements that contain the tag text\n    const tagElements = document.querySelectorAll<HTMLDivElement>('div[fs-cmsfilter-element=\"tag-text\"]');\n  \n    tagElements.forEach(element => {\n      // Check if the current element's text includes the tagName\n      if (element.textContent && element.textContent.includes(tagName)) {\n        // Find the close icon in the same tag-template parent\n        const closeIcon = element.closest('div[fs-cmsfilter-element=\"tag-template\"]')?.querySelector<HTMLImageElement>('img[fs-cmsfilter-element=\"tag-remove\"]');\n        if (closeIcon) {\n          // Trigger a click event on the close icon\n          closeIcon.click();\n        }\n      }\n    });\n  }\n\n}\n", "\n/*\n * Webflow Info Element\n * used to display basic info in an element, with a default state.  \n */ \n\n// TESTING:\n// https://x-dropdown.design.webflow.com/?pageId=65ee695cf730614c28b248ae \n\nconst CC_INFO: string = \"cc-info\"; \n\nexport class WebflowInfoElementCollection {\n\n  constructor() {\n  }\n\n  init() {\n  }\n\n}\n\nexport class WebflowInfoElement {\n\n  // Dropdown element parts\n\n  name: string;\n  infoElem: HTMLElement; // [cc-info]\n  default: string = ''; \n  valid: boolean = false;\n\n\n  // // Determines if the dropdown is open\n  // get isOpen(): boolean {\n  //   return this.dropdownListElem.classList.contains('w--open');\n  // } \n\n\n// This is a typical dropdown element\n// in Webflow \n\n/*\n<div data-hover=\"false\" data-delay=\"0\" class=\"w-dropdown\" style=\"\">\n   <div class=\"w-dropdown-toggle\" id=\"w-dropdown-toggle-0\" aria-controls=\"w-dropdown-list-0\" aria-haspopup=\"menu\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\">\n      <div class=\"w-icon-dropdown-toggle\" aria-hidden=\"true\"></div>\n      <div>Dropdown</div>\n   </div>\n   <nav class=\"w-dropdown-list\" id=\"w-dropdown-list-0\" aria-labelledby=\"w-dropdown-toggle-0\"><a href=\"#\" class=\"w-dropdown-link\" tabindex=\"0\">Link 1</a><a href=\"#\" class=\"w-dropdown-link\" tabindex=\"0\">Link 2</a><a href=\"#\" class=\"w-dropdown-link\" tabindex=\"0\">Link 3</a></nav>\n</div>\n*/ \n\n  constructor(name: string) {\n\n    this.name = name;\n\n  }\n\n  init() {\n    \n    if(!this.name) {\n      throw new Error(\"No name specified.\");\n    }\n\n    const selector: string = `[${CC_INFO}=\"${this.name}\"]`; // Construct a selector for the custom attribute\n    const element: HTMLElement | null = document.querySelector(selector);\n    \n    if (element == null) {\n      console.warn(\"Element with the specified cc-info value not found.\");\n      return;\n    }\n\n    this.infoElem = element; \n    this.default = element.textContent || '';\nwindow.debug.log(\"default is\", this.default)\n    // Element is ready for modification\n    this.valid = true; \n\n  }\n\n  clear(): void {\n\n    this.infoElem.innerText = this.default; \n\n  }\n\n  set(text: string) {\n\nwindow.debug.log(\"setting text\", text); \n\n    this.infoElem.innerText = text;\n\n  }    \n\n}\n", "\n/*\n * Page | Filter \n *\n */\n\nimport { WebflowDropdown } from \"../dropdown\";\nimport { FSFilterUtils } from \"../fs-filter-utils\";\nimport { WebflowInfoElement } from \"../info\";\n\n \n\nexport class FilterPage {\n\n  modelDropdown: WebflowDropdown; \n  selectedBrandName: WebflowInfoElement;\n  selectedModelName: WebflowInfoElement;\n\n  constructor() {\n  }\n  \n  /**\n   * Initialize filter page\n   */ \n\n  init() {\n\n    window.debug.log(\"Filter page init.\"); \n\n    // Get info elements\n    // TODO: Build as a central manager with an update overall function\n    // However this should be isolated separately in Custom Form Selects \n    this.selectedBrandName = new WebflowInfoElement(\"brand-name\");\n    this.selectedBrandName.init();\n    this.selectedModelName = new WebflowInfoElement(\"model-name\");\n    this.selectedModelName.init();\n\n    this.initBrandRadioButtons(); \n\n    const dropdownElement = document.querySelector('.select-model > .w-dropdown') as HTMLElement;\n    if (dropdownElement) {\n      // Element found, you can work with dropdownElement here\n      this.modelDropdown = new WebflowDropdown(dropdownElement)\n    //  window.debug.log('Dropdown element found:', dropdownElement);\n    } else {\n      console.error('Model dropdown element not found.');\n    }\n\n    // Setup reset click handler\n    // [fs-cmsfilter-element=reset]\n    const resetElements: NodeListOf<Element> = document.querySelectorAll('[fs-cmsfilter-element=\"reset\"]');\n        \n    resetElements.forEach((element: Element) => {\n        element.addEventListener('click', (event: Event) => {\n            this.resetFilter();\n        });\n    });\n  }\n\n  // Does additional filter reset work\n  // for our customized bits \n  resetFilter() {\n\n    // Clear brand and model name\n    this.selectedBrandName.clear();\n    this.clearModels();  \n    \n  }\n\n  /**\n   * Init brand radio buttons\n   */\n\n  initBrandRadioButtons() {\n\n    // Select all radio buttons within the .dyn-brand elements\n    const radioButtons = document.querySelectorAll('.brands-menu .dyn-brand .w-form-formradioinput.radio-button') as NodeListOf<HTMLInputElement>;\n    \n//    window.debug.log(\"radio buttons\", radioButtons); \n\n    // Add the change event listener to each rbn\n    radioButtons.forEach((radioButton: HTMLInputElement) => {\n        radioButton.addEventListener('change', (event: Event) => { \n\n          window.debug.log(`brand clicked`); \n\n            // Cast the event target back to an input element to access 'checked'\n            const target = event.target as HTMLInputElement;\n            \n            // Check if the radio button is being selected\n            if (target.checked) {\n                // Navigate to the sibling span to get the brand name\n                // Note: nextElementSibling could be null, so we check for it\n                const brandName: string | null = target.nextElementSibling ? target.nextElementSibling.textContent : '';\n                window.debug.log(\"Brand selected:\", brandName);\n                // Perform your actions with the brandName here\n              \n                if(!brandName) {\n                  console.error('Brand name is null'); \n                  return;\n                }\n\n                this.selectedBrandName.set(brandName);\n\n                // Clear Models list\n                this.clearModels(); // Assuming clearModels exists and has been properly typed\n                this.loadModels(brandName as string); // Assuming loadModels exists and accepts a string parameter\n              \n            }\n        });\n    });\n                  \n  }\n  \n  \n\n  \nloadModels(make: string): void {\n\n    // Normalize make to a slug-compatible identifier\n    // Lowercase, spaces-to-hyphens\n    make = make.toLowerCase().replace(/\\s+/g, '-');\n//    window.debug.log(\"MATCH TO\", make);\n  \n    // Load data source \"models\"\n    const modelsDataSourceElems: NodeListOf<HTMLElement> = \n      document.querySelectorAll('[cc-datasource=\"models\"]');\n  \n    const matchingModels: string[] = [];\n  \n    // Clear the selected model name\n    // since the list is being rebuilt\n    this.selectedModelName.clear();\n\n    modelsDataSourceElems.forEach((element: HTMLElement) => {\n\n      // Find all child elements with the class 'cms-select-model-type'\n      const modelTypes: NodeListOf<HTMLElement> = element.querySelectorAll('.cms-select-model-type');\n  \n      modelTypes.forEach((modelType: HTMLElement) => {\n        // Check if this modelType has a child with class 'data_model-make' that matches the make parameter\n        const modelMake: HTMLElement | null = modelType.querySelector('.data_model-make');\n\n        if (!(modelMake && modelMake.textContent))\n          return;\n\n        const matchMakeID = modelMake.textContent.trim().toLowerCase().replace(/\\s+/g, '-');\n        window.debug.log(\"matching\", matchMakeID, make.toLowerCase());\n\n        if (matchMakeID === make.toLowerCase()) {\n\n          window.debug.log(\"MATCHED\")\n\n          // If a matching model make is found, collect the model's name\n          const modelNameElem: HTMLElement | null = modelType.querySelector('.model-name');\n          if (modelNameElem && modelNameElem.textContent) {\n            let modelName: string = modelNameElem.textContent.trim(); \n            matchingModels.push(modelName);\n            \n            window.debug.log(modelName);\n            \n            // Create the model in its lists\n            this.createModel(modelName);\n          }\n        }\n      });\n    });\n  \n    // Re-initialize\n    window.debug.log(\"re-initializing dropdowns\"); \n    WebflowDropdown.initWebflowJS();\n\n    // re-initiate webflow ix2 \n    // https://discourse.webflow.com/t/how-to-change-webflow-animation-properties-with-js/193404/2\n    // (window as any).Webflow && (window as any).Webflow.destroy();\n    // (window as any).Webflow && (window as any).Webflow.ready();\n//    (window as any).Webflow && (window as any).Webflow.require( 'ix2' ).init();\n    // (window as any).Webflow.require('dropdown').ready(); \n    // document.dispatchEvent( new Event( 'readystatechange' ) );\n  \n  }\n  \n  // Create the model option in the Models select & dropdown \n  createModel(name: string): void {\n    window.debug.log(`creating model - ${name}`);\n  \n    // Assuming modelsSelectElem and modelsNavElem are already defined somewhere as HTMLElements\n    // const modelsSelectElem: HTMLElement | null = document.querySelector('.models-select'); // Update selector as necessary\n    // const modelsNavElem: HTMLElement | null = document.querySelector('.models-nav'); // Update selector as necessary\n    const modelsSelectElem: HTMLSelectElement | undefined = (window as any).modelsSelectElem;\n    const modelsNavElem: HTMLElement | undefined = (window as any).modelsNavElem;\n  \n    // Create model in select elem\n    if (modelsSelectElem) {\n      const option = document.createElement('option');\n      option.value = name;\n      option.textContent = name;\n  \n      // TypeScript knows modelsSelectElem is an HTMLElement, but we know it's more specific, a select element\n      (modelsSelectElem as HTMLSelectElement).appendChild(option);\n  \n      window.debug.log('Model option created');\n    } else {\n      window.debug.log('Select element not found');\n    }\n  \n    // Create model in nav elem\n    if (modelsNavElem) {\n      const linkElement = document.createElement('a');\n      linkElement.href = '#';\n      linkElement.classList.add('sort_field', 'w-dropdown-link');\n      linkElement.tabIndex = -1;\n      linkElement.setAttribute('role', 'option');\n      linkElement.setAttribute('aria-selected', 'false');\n      linkElement.textContent = name;\n  \n      modelsNavElem.appendChild(linkElement);\n  \nwindow.debug.log(\"CREATING\")\n\n      linkElement.addEventListener('click', event => {\n//        event.preventDefault();\n        this.selectModel(name); // Ensure selectModel is also properly typed in TypeScript\n      });\n    } else {\n      console.error('The specific nav element was not found.');\n    }\n  }\n  \n  // Handles select events on the model \n  selectModel(name: string): void {\n    // Access the select element; assuming it's globally available\n    // Ensure that modelsSelectElem is declared and correctly typed elsewhere in your TypeScript code\n    const modelsSelectElem: HTMLSelectElement | undefined = (window as any).modelsSelectElem;\n\n    // Close the model dropdown\n    this.modelDropdown.close();\n\n\n  // // Create the click event\n  // const clickEvent = new MouseEvent('click', {\n  //   bubbles: true,      // The event bubbles up through the DOM\n  //   cancelable: true,   // The event can be canceled\n  //   view: window,       // The event's view is the current window\n  //   clientX: 10,   // The calculated X position\n  //   clientY: 300    // The calculated Y position\n  // });\n\n  // // Dispatch the event from the document to simulate a click at the window level\n  // document.dispatchEvent(clickEvent);\n\n\n\n    window.debug.log (\"selectModel select\", modelsSelectElem); \n    window.debug.log(`selecting model - ${name}`);\n  \n    // Display model name\n    this.selectedModelName.set(name);\n\n    if (modelsSelectElem) {\n      let found = false; // Flag to indicate if the option is found\n      for (let i = 0; i < modelsSelectElem.options.length; i++) {\n        if (modelsSelectElem.options[i].value === name) {\n          modelsSelectElem.selectedIndex = i; // Change the selected index to the found option\n  \n          // Create and dispatch a 'change' event that bubbles\n          let changeEvent = new Event('change', { bubbles: true, cancelable: true });\n          modelsSelectElem.dispatchEvent(changeEvent);\n  \n          // Optionally dispatch an 'input' event if necessary\n          changeEvent = new Event('input', { bubbles: true, cancelable: true });\n          modelsSelectElem.dispatchEvent(changeEvent);\n  \n          found = true;\n          window.debug.log(`Model '${name}' selected.`);\n          break; // Exit the loop once the matching option is found\n        }\n      }\n  \n      if (!found) {\n        window.debug.log(`Model '${name}' not found in the select options.`);\n      }\n    } else {\n      console.error('modelsSelectElem is not defined on window.');\n    }\n  }\n  \n  // dropdownClear(): void {\n\n  //   // Empty dropdown except first item\n  //   this.modelDropdown.clear(true);\n\n  // }\n\n  clearModels(): void {\n\n    // Accessing global elements; ensure they are declared and typed appropriately elsewhere in your TypeScript code\n    const modelsSelectElem: HTMLSelectElement | undefined = (window as any).modelsSelectElem;\n    const modelsNavElem: HTMLElement | undefined = (window as any).modelsNavElem;\n  \n    // Clear name\n    this.selectedModelName.clear();\n\n\nwindow.debug.log (\"Models select elem\", modelsSelectElem); \n\n    if (modelsSelectElem) {\n      // Clear all existing options\n      modelsSelectElem.innerHTML = '';\n\n      window.debug.log(modelsSelectElem.innerHTML);\n  \n      // Create the new default option\n      const defaultOption = document.createElement('option');\n      defaultOption.value = '';\n      defaultOption.textContent = 'Select Model...';\n  \n      // Add the default option to the select element\n      modelsSelectElem.appendChild(defaultOption);\n  \n      // Assuming removeFilterTagByName is correctly typed and declared elsewhere\n//      this.removeFilterTagByName(\"Model\");\n      FSFilterUtils.removeFilterTagByName(\"Model\");\n  \n      window.debug.log('Models cleared');\n  \n    } else {\n      window.debug.log('Select element not found');\n    }\n  \n    if (modelsNavElem) {\n      // Remove existing links\n      const links = modelsNavElem.querySelectorAll('a');\n      links.forEach(link => link.parentNode?.removeChild(link));\n  \n      // Create and append the new default link\n      const linkElement = document.createElement('a');\n      linkElement.href = '#';\n      linkElement.classList.add('sort_field', 'w-dropdown-link', 'w--current');\n      linkElement.tabIndex = -1;\n      linkElement.role = 'option';\n      linkElement.setAttribute('aria-selected', 'false');\n      linkElement.textContent = 'Select Model...';\n  \n      modelsNavElem.appendChild(linkElement);\n  \n    } else {\n      window.debug.log('Nav element not found');\n    }\n  }\n  \n  \n  // removeFilterTagByName(tagName: string): void {\n  //   // Find all elements that contain the tag text\n  //   const tagElements = document.querySelectorAll<HTMLDivElement>('div[fs-cmsfilter-element=\"tag-text\"]');\n  \n  //   tagElements.forEach(element => {\n  //     // Check if the current element's text includes the tagName\n  //     if (element.textContent && element.textContent.includes(tagName)) {\n  //       // Find the close icon in the same tag-template parent\n  //       const closeIcon = element.closest('div[fs-cmsfilter-element=\"tag-template\"]')?.querySelector<HTMLImageElement>('img[fs-cmsfilter-element=\"tag-remove\"]');\n  //       if (closeIcon) {\n  //         // Trigger a click event on the close icon\n  //         closeIcon.click();\n  //       }\n  //     }\n  //   });\n  // }\n\n}\n", "\n/*\n * Page | Filter \n */\nimport { WebflowDropdown } from \"../dropdown\";\n\n \n\nexport class TestPage {\n\n  modelDropdown: WebflowDropdown; \n\n  constructor() {\n  }\n  \n  init() {\n\n    window.debug.log(\"Test page init.\"); \n\n    const dropdownElement = document.querySelector('.select-model > .w-dropdown') as HTMLElement;\n    if (dropdownElement) {\n      // Element found, you can work with dropdownElement here\n      this.modelDropdown = new WebflowDropdown(dropdownElement)\n    //  window.debug.log('Dropdown element found:', dropdownElement);\n    } else {\n      console.error('Model dropdown element not found.');\n    }\n\n  // Wire up buttons\n  // Select all buttons with the 'test' attribute\n  const buttons = document.querySelectorAll('[test]');\n  buttons.forEach(button => {\n    button.addEventListener('click', () => {\n      const action = button.getAttribute('test');\n      switch (action) {\n        case 'open':\n          window.debug.log('open')\n          this.modelDropdown.open();\n          break;\n        case 'close':\n          window.debug.log('close')\n          this.modelDropdown.close();\n          break;\n        case 'toggle':\n          window.debug.log('toggle')\n          this.modelDropdown.isOpen ? this.modelDropdown.close() : this.modelDropdown.open();\n          break;\n        default:\n          console.error('Invalid action.');\n      }\n    });\n  });\n\n\n  }\n\n}\n", "/*\n * Sygnal\n * Route Dispatcher\n * \n */\n\ntype RouteHandler = () => void;\n\nexport interface Routes {\n    [path: string]: RouteHandler;\n}\n\n// Example routes\nconst routes: Routes = {\n    '/': () => {\n        window.debug.log('This is the homepage.');\n        // Your function for the homepage\n    },\n    '/about': () => {\n        window.debug.log('This is the about page.');\n        // Your function for the about page\n    },\n    '/contact/*': () => {\n        window.debug.log('This is the contact page.');\n        // Your function for the contact page\n    },\n    // ... add more routes as needed\n};\n\nexport class RouteDispatcher {\n\n    routes: Routes;\n\n    constructor() {\n//        this.routes = {};\n    }\n\n    matchRoute(path: string): RouteHandler | null {\n        for (const route in this.routes) {\n            if (route.endsWith('*')) {\n                // If the route ends with *, treat it as a wildcard\n                const baseRoute = route.slice(0, -1); // Remove the * from the end\n                if (path.startsWith(baseRoute)) {\n                    return this.routes[route];\n                }\n            } else if (route === path) {\n                // Exact match\n                return this.routes[route];\n            }\n        }\n        return null; // No matching route found\n    }\n    \n    dispatchRoute() {\n        const path = window.location.pathname;\n        const handler = this.matchRoute(path);\n        if (handler) {\n            handler();\n        } else {\n            window.debug.log('No specific function for this path.');\n            // Default function or behavior for unspecified paths\n        }\n    }\n    \n    \n}", "/*\n * Custom Cages \n * Main entry point\n * \n */\n\nimport { Sa5Debug } from './debug';\nimport { FilterPage } from './page/filter';\nimport { TestPage } from './page/test';\nimport { RouteDispatcher } from './routeDispatcher';\n\n// Global vars\nconst SITE_NAME = 'CustomCages';\nconst VERSION = 'v0.1.4';\n\n// Global object\nwindow[SITE_NAME] = window[SITE_NAME] || {}; \nvar Rise = window[SITE_NAME];\n\n// const modelsDataSourceElems = document.querySelectorAll('[cc-datasource=\"models\"]');\n// var modelsSelectElem = document.querySelector('[fs-cmsfilter-field=\"Model\"]');\n// const modelsNavElem = document.querySelector('.select-model nav');\n\n// https://finsweet.com/attributes/api/cms-filter \n//  window.fsAttributes.cmsfilter.init();\n  \n// Do something with the matching models, like logging them to the console\n//  window.debug.log(matchingModels);\n\n\n\n// Add debug logging\n// and debug mode\n// ?debug=true\n// or, webflow.io\n// or, dev. \n\n\n\n// Extend the Window interface to include fsAttributes\ndeclare global {\n  interface Window {\n    fsAttributes: [string, (filterInstances: any[]) => void][];\n\n    modelsDataSourceElems: NodeListOf<HTMLElement>;\n    modelsSelectElem: HTMLElement | null;\n    modelsNavElem: HTMLElement | null;\n  }\n}\n  \n// Check if fsAttributes exists, if not initialize it\nwindow.fsAttributes = window.fsAttributes || [];\n\n// Push your custom attribute and function into the fsAttributes array\nwindow.fsAttributes.push([\n  'cmsfilter',\n  (filterInstances: any[]) => { // Assuming 'any[]' for filterInstances type, adjust as known\n    window.debug.log('cmsfilter Successfully loaded!');\n    window.debug.log(filterInstances);\n    \n    // Assuming you want to store the first instance globally on the window object\n    // First, extend the Window interface to include filterInstance\n    [window.filterInstance] = filterInstances;\n  },\n]);\n  \n\nwindow.modelsDataSourceElems = document.querySelectorAll('[cc-datasource=\"models\"]');\nwindow.modelsSelectElem = document.querySelector('[fs-cmsfilter-field=\"Model\"]');\nwindow.modelsNavElem = document.querySelector('.select-model nav');\n\n\n// Additional declaration to inform TypeScript about the new property\ndeclare global {\n  interface Window {\n    filterInstance?: any; // Adjust the type according to what filterInstance actually is\n\n    modelsDataSourceElems: NodeListOf<HTMLElement>;\n    modelsSelectElem: HTMLElement | null;\n    modelsNavElem: HTMLElement | null;\n\n    debug: Sa5Debug;\n  }\n}\n  \n\n\n\nfunction init(): void {\n\n  /**\n   * Init debugging\n   */\n\n  window.debug = new Sa5Debug(); \n\n  // Enable if in a debug situation\n  if (window.location.hostname.endsWith(\"webflow.io\"))\n    window.debug.enabled = true;\n  if (new URLSearchParams(window.location.search).has(\"debug\")) \n    window.debug.enabled = true;\n\n  /**\n   * Announce lib install\n   */\n\n  window.debug.log(`${SITE_NAME} package init ${VERSION}`);\n\n  // (new Modal()).init();  \n\n  /**\n   * Route requests, by path\n   */\n\n  var routeDispatcher = new RouteDispatcher();\n  routeDispatcher.routes = {\n      '/categories/roll-cage-kits': () => {\n\n          (new FilterPage()).init();\n\n      },\n      '/test': () => {\n\n          (new TestPage()).init();\n\n      }\n  };\n  routeDispatcher.dispatchRoute(); \n\n}\n\ninit(); \n  \n"],
  "mappings": "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",
  "names": []
}
